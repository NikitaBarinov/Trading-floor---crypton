/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TradingFloor, TradingFloorInterface } from "../TradingFloor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_voteToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_PriceInETH",
        type: "uint256",
      },
    ],
    name: "ACDMBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "FeeTransfered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_priceForAmountACDM",
        type: "uint256",
      },
    ],
    name: "OrderBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_numOfRound",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalPriceForACDM",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idOrder",
        type: "uint256",
      },
    ],
    name: "OrderCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "_saleOrTrade",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "RoundStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_refer",
        type: "address",
      },
    ],
    name: "UserIsRegistrated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalPriceForACDM",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
    ],
    name: "addOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "balanceOfACDM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
    ],
    name: "buyACDMInSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idOrder",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
    ],
    name: "buyOrder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finishRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIdOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numOfRound",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_idOrder",
        type: "uint256",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "numRound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAmountACDM",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPriceForACDM",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
        ],
        internalType: "struct TradingFloor.order",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getRefer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getRound",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finishTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tradingVolumeETH",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensLeft",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "saleOrTrade",
            type: "bool",
          },
        ],
        internalType: "struct TradingFloor.round",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTradingFloorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numOfRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_refer",
        type: "address",
      },
    ],
    name: "registration",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyACDM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingFloorInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006007553480156200001657600080fd5b5060405162002528380380620025288339810160408190526200003991620000d2565b620000443362000082565b60018055600280546001600160a01b03909216610100026001600160a81b03199092169190911790556509184e72a000600455600060035562000102565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000e4578081fd5b81516001600160a01b0381168114620000fb578182fd5b9392505050565b61241680620001126000396000f3fe60806040526004361061014b5760003560e01c806372bbe2d3116100b657806398d5fdca1161006f57806398d5fdca146103fe578063ca49a54314610413578063f28db6c414610426578063f2fde38b14610446578063f3fef3a314610466578063fb44b2491461048657600080fd5b806372bbe2d31461032957806373890fd11461033f5780638456cb59146103545780638da5cb5b146103695780638f1327c0146103875780639270c82c146103eb57600080fd5b8063514fcac711610108578063514fcac71461023f578063547916ea1461025f5780635c975abb146102745780635e1a35731461028c57806362a7d3a3146102fe578063715018a61461031457600080fd5b80630840605a14610150578063142ee8d8146101855780632f59547c1461019a578063334551ff146101b95780633f4ba83a146101d95780634a5338f1146101ee575b600080fd5b34801561015c57600080fd5b5061017061016b3660046121b3565b610499565b60405190151581526020015b60405180910390f35b610198610193366004612246565b610583565b005b3480156101a657600080fd5b506007545b60405190815260200161017c565b3480156101c557600080fd5b506101ab6101d43660046121b3565b610af8565b3480156101e557600080fd5b50610198610b87565b3480156101fa57600080fd5b506102276102093660046121b3565b6001600160a01b039081166000908152600b60205260409020541690565b6040516001600160a01b03909116815260200161017c565b34801561024b57600080fd5b5061019861025a366004612216565b610bbb565b34801561026b57600080fd5b50610198610d34565b34801561028057600080fd5b5060025460ff16610170565b34801561029857600080fd5b506102ac6102a7366004612246565b610ddb565b60405161017c919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a09182015115159181019190915260c00190565b34801561030a57600080fd5b506101ab60055481565b34801561032057600080fd5b50610198610e7c565b34801561033557600080fd5b506101ab60035481565b34801561034b57600080fd5b50610198610eb0565b34801561036057600080fd5b5061019861102a565b34801561037557600080fd5b506000546001600160a01b0316610227565b34801561039357600080fd5b506103a76103a2366004612216565b61105c565b60405161017c9190600060a0820190508251825260208301516020830152604083015160408301526060830151606083015260808301511515608083015292915050565b6101986103f9366004612216565b6110e4565b34801561040a57600080fd5b506004546101ab565b34801561041f57600080fd5b50426101ab565b34801561043257600080fd5b50610198610441366004612246565b61131b565b34801561045257600080fd5b506101986104613660046121b3565b61150d565b34801561047257600080fd5b506101986104813660046121cd565b6115a5565b34801561049257600080fd5b5030610227565b60006104a760025460ff1690565b156104cd5760405162461bcd60e51b81526004016104c4906122b6565b60405180910390fd5b6001600160a01b0382163314156105265760405162461bcd60e51b815260206004820152601760248201527f43616e206e6f742062652073656c662d7265666572657200000000000000000060448201526064016104c4565b336000818152600b602052604080822080546001600160a01b0319166001600160a01b03871690811790915590519092917f1cc1dd37272470ddf36808e8645512556efd12a1222b59bc3512d11a2c2dcd2891a35060015b919050565b60025460ff16156105a65760405162461bcd60e51b81526004016104c4906122b6565b600260015414156105f95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104c4565b60026001556007548211156106475760405162461bcd60e51b815260206004820152601460248201527313dc99195c88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016104c4565b6003546000908152600c6020526040902080548390811061067857634e487b7160e01b600052603260045260246000fd5b600091825260209091206005600690920201015460ff1615156001146106cf5760405162461bcd60e51b815260206004820152600c60248201526b13dc99195c8818db1bdcd95960a21b60448201526064016104c4565b80600c60006003548152602001908152602001600020838154811061070457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016002015410156107595760405162461bcd60e51b8152602060048201526012602482015271496e737566666963656e7420746f6b656e7360701b60448201526064016104c4565b6003546000908152600c6020526040812080548490811061078a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160030154629896806107aa919061234d565b6003546000908152600c602052604090208054859081106107db57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160040154629896806107fb919061234d565b610805919061232d565b9050600062989680610817838261234d565b610821908561234d565b61082b919061232d565b9050348111156108715760405162461bcd60e51b8152602060048201526011602482015270496e737566666963656e732066756e647360781b60448201526064016104c4565b6108843361087f833461236c565b611635565b6003546000908152600a6020526040812060020180548392906108a8908490612315565b90915550506003546000908152600c602052604090208054849190869081106108e157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016002016000828254610901919061236c565b90915550506003546000908152600c602052604081208054610977928492600b928990811061094057634e487b7160e01b600052603260045260246000fd5b600091825260208083206006909202909101546001600160a01b0390811684529083019390935260409091019020541660196116d4565b610a0081600b6000600b6000600c600060035481526020019081526020016000208a815481106109b757634e487b7160e01b600052603260045260246000fd5b600091825260208083206006909202909101546001600160a01b0390811684528382019490945260409283018220548416855284019490945291909101909120541660196116d4565b610a64600c600060035481526020019081526020016000208581548110610a3757634e487b7160e01b600052603260045260246000fd5b600091825260209091206006909102015460025461010090046001600160a01b0390811691163386611763565b6003546000908152600c60205260409020805433919086908110610a9857634e487b7160e01b600052603260045260246000fd5b600091825260209182902060069091020154604080518781529283018590526001600160a01b03909116917fc5a8e3e52ad7afd94d1c5a892e99f6490c03c4cfb961024f85e6cd6fea7cb25b910160405180910390a35050600180555050565b6002546040516370a0823160e01b81526001600160a01b0383811660048301526000928392610100909104909116906370a082319060240160206040518083038186803b158015610b4857600080fd5b505afa158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b80919061222e565b9392505050565b6000546001600160a01b03163314610bb15760405162461bcd60e51b81526004016104c4906122e0565b610bb96117bd565b565b6003546000908152600c60205260408120805483908110610bec57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160c081018252600690930290910180546001600160a01b031680845260018201549484019490945260028101549183019190915260038101546060830152600481015460808301526005015460ff16151560a082015291503314610c935760405162461bcd60e51b815260206004820152600f60248201526e2737ba1037b93232b91037bbb732b960891b60448201526064016104c4565b60a08101511515600114610ce05760405162461bcd60e51b815260206004820152601460248201527313dc99195c88185b1c9958591e4818db1bdcd95960621b60448201526064016104c4565b6003546000908152600c60205260408120805484908110610d1157634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160020181905550610d308183611851565b5050565b60025460ff1615610d575760405162461bcd60e51b81526004016104c4906122b6565b6003546000908152600a6020526040902060010154421015610dbb5760405162461bcd60e51b815260206004820152601760248201527f526f756e642063616e206e6f7420626520636c6f73656400000000000000000060448201526064016104c4565b60038054906000610dcb836123af565b9190505550610dd8611997565b50565b610de361215b565b6000838152600c60205260409020805483908110610e1157634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160c081018252600690930290910180546001600160a01b03168352600181015493830193909352600283015490820152600382015460608201526004820154608082015260059091015460ff16151560a0820152905092915050565b6000546001600160a01b03163314610ea65760405162461bcd60e51b81526004016104c4906122e0565b610bb96000611d19565b6000546001600160a01b03163314610eda5760405162461bcd60e51b81526004016104c4906122e0565b6002546040516340c10f1960e01b8152306004820152620186a060248201526101009091046001600160a01b0316906340c10f1990604401600060405180830381600087803b158015610f2c57600080fd5b505af1158015610f40573d6000803e3d6000fd5b505060025460405163095ea7b360e01b8152306004820152620186a060248201526101009091046001600160a01b0316925063095ea7b39150604401602060405180830381600087803b158015610f9657600080fd5b505af1158015610faa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fce91906121f6565b50610fda600042612315565b600380546000908152600a60205260408082206001019390935581548152828120620186a090558154815282812060020181905590548152908120600401805460ff191690556008819055600955565b6000546001600160a01b031633146110545760405162461bcd60e51b81526004016104c4906122e0565b610bb9611d69565b6110906040518060a00160405280600081526020016000815260200160008152602001600081526020016000151581525090565b506000908152600a6020908152604091829020825160a081018452815481526001820154928101929092526002810154928201929092526003820154606082015260049091015460ff161515608082015290565b600260015414156111375760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104c4565b600260015561114860025460ff1690565b156111655760405162461bcd60e51b81526004016104c4906122b6565b6000620f424060045483611179919061234d565b61118690620f424061234d565b611190919061232d565b6003546000908152600a602052604090206004015490915060ff16156111eb5760405162461bcd60e51b815260206004820152601060248201526f139bdd0818481cd85b19481c9bdd5b9960821b60448201526064016104c4565b8034101561122f5760405162461bcd60e51b8152602060048201526011602482015270496e737566666963656e742066756e647360781b60448201526064016104c4565b6003546000908152600a602052604081206002018054839290611253908490612315565b9091555050336000908152600b602052604090205461127e9082906001600160a01b031660326116d4565b336000908152600b6020526040808220546001600160a01b0390811683529120546112ad91839116601e6116d4565b6112bb3361087f833461236c565b6002546112d89061010090046001600160a01b0316303385611763565b604080518381526020810183905233917f270d61a93f3628a504f8b985e516cc56a9cd541defbdc26196333fda2bacc9c5910160405180910390a2505060018055565b60025460ff161561133e5760405162461bcd60e51b81526004016104c4906122b6565b6003546000908152600a602052604090206004015460ff16151560011461139b5760405162461bcd60e51b8152602060048201526011602482015270139bdd0818481d1c985919481c9bdd5b99607a1b60448201526064016104c4565b806113a533610af8565b10156113e85760405162461bcd60e51b8152602060048201526012602482015271496e737566666963656e7420746f6b656e7360701b60448201526064016104c4565b6113f061215b565b3381526060810182905260808101839052604081018290526003546020820152600160a082015260088054906000611427836123af565b9091555050600380546000908152600c6020908152604080832080546001808201835591855293839020865160069095020180546001600160a01b0319166001600160a01b0390951694909417845585830151908401558481015160028401556060850151938301939093556080840151600483015560a08401516005909201805460ff19169215159290921790915560075482518581529182018690529133917fc91f8c0f477cf15f9c2817f9ebd625732b44c4753ed718ae0276a96577a69f72910160405180910390a360078054906000611503836123af565b9190505550505050565b6000546001600160a01b031633146115375760405162461bcd60e51b81526004016104c4906122e0565b6001600160a01b03811661159c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104c4565b610dd881611d19565b6000546001600160a01b031633146115cf5760405162461bcd60e51b81526004016104c4906122e0565b60025460ff16156115f25760405162461bcd60e51b81526004016104c4906122b6565b6115fc8282611635565b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611682576040519150601f19603f3d011682016040523d82523d6000602084013e611687565b606091505b50509050806116cf5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016104c4565b505050565b816001600160a01b0381161561175d576000633b9aca006116f5848761234d565b61170290620f424061234d565b61170c919061232d565b90506117188282611635565b836001600160a01b03167f2604fdad714a10fb8b95e0f03397e449f85ee9df88bd145ca531f15b8350fb578260405161175391815260200190565b60405180910390a2505b50505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261175d908590611dc1565b60025460ff166118065760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104c4565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b0390911681526020015b60405180910390a1565b600060a0830181905260408084018290526003548252600c602052902080548391908390811061189157634e487b7160e01b600052603260045260246000fd5b6000918252602080832084516006939093020180546001600160a01b0319166001600160a01b03909316929092178255838101516001830155604080850151600284015560608501516003808501919091556080860151600485015560a0909501516005909301805460ff1916931515939093179092559254808352600c909352902080547ffd26bdfab7051e704daf6de4b923d491d29d356b8d9135f96640adfc1c58cec4929184918290811061195957634e487b7160e01b600052603260045260246000fd5b60009182526020918290206006909102015460408051948552918401929092526001600160a01b039091169082015260600160405180910390a15050565b60006119a38142612315565b600a6000600354815260200190815260200160002060010181905550600a600060016003546119d2919061236c565b815260208101919091526040016000206004015460ff16151560011415611c48576119fb611e93565b6003546000908152600a60205260409020600401805460ff1916905560025461010090046001600160a01b03166342966c68611a3630610af8565b6040518263ffffffff1660e01b8152600401611a5491815260200190565b600060405180830381600087803b158015611a6e57600080fd5b505af1158015611a82573d6000803e3d6000fd5b50505050600060045462989680611a99919061234d565b600a60006001600354611aac919061236c565b81526020019081526020016000206002015462989680611acc919061234d565b611ad6919061232d565b6002546040516340c10f1960e01b81523060048201526024810183905291925061010090046001600160a01b0316906340c10f1990604401600060405180830381600087803b158015611b2857600080fd5b505af1158015611b3c573d6000803e3d6000fd5b505060025460405163095ea7b360e01b8152306004820152602481018590526101009091046001600160a01b0316925063095ea7b39150604401602060405180830381600087803b158015611b9057600080fd5b505af1158015611ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc891906121f6565b50600380546000908152600a6020908152604080832085905583548352808320600201839055925482529082902060048082015491549054845160ff9093161515835292820152918201527f3f1f256d10c452e96cacc3da6ad90cd0b5d4aa08e745cb4ccb46bf38ef4b248d9060600160405180910390a1600191505090565b600a60006001600354611c5b919061236c565b815260208101919091526040016000206004015460ff16611d1357611c7e611ef7565b600380546000908152600a60209081526040808320839055835483528083206004908101805460ff191660011790558454845281842060020184905593548352918290208084015490549354835160ff9092161515825291810193909352908201527f3f1f256d10c452e96cacc3da6ad90cd0b5d4aa08e745cb4ccb46bf38ef4b248d9060600160405180910390a150600190565b50600090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60025460ff1615611d8c5760405162461bcd60e51b81526004016104c4906122b6565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118333390565b6000611e16826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611fe39092919063ffffffff16565b8051909150156116cf5780806020019051810190611e3491906121f6565b6116cf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104c4565b620f4240600454620fb770611ea8919061234d565b611eb2919061232d565b611ec2906503a352944000612315565b60048190556040519081527fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290602001611847565b600854600954600090611f0b90839061236c565b905060005b82811015611fd9576003546000908152600c60205260409020611fc790611f378385612315565b81548110611f5557634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160c081018252600690930290910180546001600160a01b03168352600181015493830193909352600283015490820152600382015460608201526004820154608082015260059091015460ff16151560a0820152611fc28385612315565b611851565b80611fd1816123af565b915050611f10565b5050600060085550565b6060611ff28484600085611ffa565b949350505050565b60608247101561205b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104c4565b843b6120a95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104c4565b600080866001600160a01b031685876040516120c59190612267565b60006040518083038185875af1925050503d8060008114612102576040519150601f19603f3d011682016040523d82523d6000602084013e612107565b606091505b5091509150612117828286612122565b979650505050505050565b60608315612131575081610b80565b8251156121415782518084602001fd5b8160405162461bcd60e51b81526004016104c49190612283565b6040518060c0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b80356001600160a01b038116811461057e57600080fd5b6000602082840312156121c4578081fd5b610b808261219c565b600080604083850312156121df578081fd5b6121e88361219c565b946020939093013593505050565b600060208284031215612207578081fd5b81518015158114610b80578182fd5b600060208284031215612227578081fd5b5035919050565b60006020828403121561223f578081fd5b5051919050565b60008060408385031215612258578182fd5b50508035926020909101359150565b60008251612279818460208701612383565b9190910192915050565b60208152600082518060208401526122a2816040850160208701612383565b601f01601f19169190910160400192915050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115612328576123286123ca565b500190565b60008261234857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612367576123676123ca565b500290565b60008282101561237e5761237e6123ca565b500390565b60005b8381101561239e578181015183820152602001612386565b8381111561175d5750506000910152565b60006000198214156123c3576123c36123ca565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204b7d170294c1bffe55c4ef74048656cad5d967ca2b14214ec87629d6e776699d64736f6c63430008040033";

type TradingFloorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TradingFloorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TradingFloor__factory extends ContractFactory {
  constructor(...args: TradingFloorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _voteToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TradingFloor> {
    return super.deploy(_voteToken, overrides || {}) as Promise<TradingFloor>;
  }
  getDeployTransaction(
    _voteToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_voteToken, overrides || {});
  }
  attach(address: string): TradingFloor {
    return super.attach(address) as TradingFloor;
  }
  connect(signer: Signer): TradingFloor__factory {
    return super.connect(signer) as TradingFloor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradingFloorInterface {
    return new utils.Interface(_abi) as TradingFloorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TradingFloor {
    return new Contract(address, _abi, signerOrProvider) as TradingFloor;
  }
}
