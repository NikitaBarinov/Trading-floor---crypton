/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TradingFloor, TradingFloorInterface } from "../TradingFloor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_voteToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_PriceInETH",
        type: "uint256",
      },
    ],
    name: "ACDMBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "FeeTransfered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_priceForAmountACDM",
        type: "uint256",
      },
    ],
    name: "OrderBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_numOfRound",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalPriceForACDM",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "idOrder",
        type: "uint256",
      },
    ],
    name: "OrderCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "_saleOrTrade",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "RoundStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_refer",
        type: "address",
      },
    ],
    name: "UserIsRegistrated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalPriceForACDM",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
    ],
    name: "addOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "balanceOfACDM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
    ],
    name: "buyACDMInSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idOrder",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountACDM",
        type: "uint256",
      },
    ],
    name: "buyOrder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finishRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getIdOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numOfRound",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_idOrder",
        type: "uint256",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "numRound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAmountACDM",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPriceForACDM",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
        ],
        internalType: "struct TradingFloor.order",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getRefer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getRound",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finishTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tradingVolumeETH",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "saleOrTrade",
            type: "bool",
          },
        ],
        internalType: "struct TradingFloor.round",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTradingFloorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numOfRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_refer",
        type: "address",
      },
    ],
    name: "registration",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingFloorInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006005553480156200001657600080fd5b50604051620024f5380380620024f58339810160408190526200003991620000d2565b620000443362000082565b60018055600280546001600160a01b03909216610100026001600160a81b03199092169190911790556509184e72a000600455600060035562000102565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000e4578081fd5b81516001600160a01b0381168114620000fb578182fd5b9392505050565b6123e380620001126000396000f3fe6080604052600436106101355760003560e01c806372bbe2d3116100ab5780639270c82c1161006f5780639270c82c146103b057806398d5fdca146103c3578063f28db6c4146103d8578063f2fde38b146103f8578063f3fef3a314610418578063fb44b2491461043857600080fd5b806372bbe2d3146102fd57806373890fd1146103135780638456cb59146103285780638da5cb5b1461033d5780638f1327c01461035b57600080fd5b80634a5338f1116100fd5780634a5338f1146101d8578063514fcac714610229578063547916ea146102495780635c975abb1461025e5780635e1a357314610276578063715018a6146102e857600080fd5b80630840605a1461013a578063142ee8d81461016f5780632f59547c14610184578063334551ff146101a35780633f4ba83a146101c3575b600080fd5b34801561014657600080fd5b5061015a610155366004612180565b61044b565b60405190151581526020015b60405180910390f35b61018261017d366004612213565b610535565b005b34801561019057600080fd5b506005545b604051908152602001610166565b3480156101af57600080fd5b506101956101be366004612180565b610a62565b3480156101cf57600080fd5b50610182610af1565b3480156101e457600080fd5b506102116101f3366004612180565b6001600160a01b039081166000908152600960205260409020541690565b6040516001600160a01b039091168152602001610166565b34801561023557600080fd5b506101826102443660046121e3565b610b25565b34801561025557600080fd5b50610182610c9e565b34801561026a57600080fd5b5060025460ff1661015a565b34801561028257600080fd5b50610296610291366004612213565b610d45565b604051610166919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a09182015115159181019190915260c00190565b3480156102f457600080fd5b50610182610de6565b34801561030957600080fd5b5061019560035481565b34801561031f57600080fd5b50610182610e1a565b34801561033457600080fd5b50610182610f94565b34801561034957600080fd5b506000546001600160a01b0316610211565b34801561036757600080fd5b5061037b6103763660046121e3565b610fc6565b604051610166919081518152602080830151908201526040808301519082015260609182015115159181019190915260800190565b6101826103be3660046121e3565b61103d565b3480156103cf57600080fd5b50600454610195565b3480156103e457600080fd5b506101826103f3366004612213565b611273565b34801561040457600080fd5b50610182610413366004612180565b61147f565b34801561042457600080fd5b5061018261043336600461219a565b611517565b34801561044457600080fd5b5030610211565b600061045960025460ff1690565b1561047f5760405162461bcd60e51b815260040161047690612283565b60405180910390fd5b6001600160a01b0382163314156104d85760405162461bcd60e51b815260206004820152601760248201527f43616e206e6f742062652073656c662d726566657265720000000000000000006044820152606401610476565b3360008181526009602052604080822080546001600160a01b0319166001600160a01b03871690811790915590519092917f1cc1dd37272470ddf36808e8645512556efd12a1222b59bc3512d11a2c2dcd2891a35060015b919050565b60025460ff16156105585760405162461bcd60e51b815260040161047690612283565b600260015414156105ab5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610476565b60026001556005548211156105f95760405162461bcd60e51b815260206004820152601460248201527313dc99195c88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610476565b6003546000908152600a6020526040902080548390811061062a57634e487b7160e01b600052603260045260246000fd5b600091825260209091206005600690920201015460ff1615156001146106815760405162461bcd60e51b815260206004820152600c60248201526b13dc99195c8818db1bdcd95960a21b6044820152606401610476565b80600a6000600354815260200190815260200160002083815481106106b657634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160020154101561070b5760405162461bcd60e51b8152602060048201526012602482015271496e737566666963656e7420746f6b656e7360701b6044820152606401610476565b6003546000908152600a6020526040812080548490811061073c57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600301546298968061075c919061231a565b6003546000908152600a6020526040902080548590811061078d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160040154629896806107ad919061231a565b6107b791906122fa565b90506000629896806107c9838261231a565b6107d3908561231a565b6107dd91906122fa565b9050348111156108235760405162461bcd60e51b8152602060048201526011602482015270496e737566666963656e732066756e647360781b6044820152606401610476565b610836336108318334612339565b6115a7565b6003546000908152600860205260408120600201805483929061085a9084906122e2565b90915550506003546000908152600a6020526040902080548491908690811061089357634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160020160008282546108b39190612339565b90915550506003546000908152600a602052604081208054610929928492600992899081106108f257634e487b7160e01b600052603260045260246000fd5b600091825260208083206006909202909101546001600160a01b039081168452908301939093526040909101902054166019611646565b6109b2816009600060096000600a600060035481526020019081526020016000208a8154811061096957634e487b7160e01b600052603260045260246000fd5b600091825260208083206006909202909101546001600160a01b039081168452838201949094526040928301822054841685528401949094529190910190912054166019611646565b6002546109ce9061010090046001600160a01b031633856116d5565b6003546000908152600a60205260409020805433919086908110610a0257634e487b7160e01b600052603260045260246000fd5b600091825260209182902060069091020154604080518781529283018590526001600160a01b03909116917fc5a8e3e52ad7afd94d1c5a892e99f6490c03c4cfb961024f85e6cd6fea7cb25b910160405180910390a35050600180555050565b6002546040516370a0823160e01b81526001600160a01b0383811660048301526000928392610100909104909116906370a082319060240160206040518083038186803b158015610ab257600080fd5b505afa158015610ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aea91906121fb565b9392505050565b6000546001600160a01b03163314610b1b5760405162461bcd60e51b8152600401610476906122ad565b610b23611738565b565b6003546000908152600a60205260408120805483908110610b5657634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160c081018252600690930290910180546001600160a01b031680845260018201549484019490945260028101549183019190915260038101546060830152600481015460808301526005015460ff16151560a082015291503314610bfd5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1037b93232b91037bbb732b960891b6044820152606401610476565b60a08101511515600114610c4a5760405162461bcd60e51b815260206004820152601460248201527313dc99195c88185b1c9958591e4818db1bdcd95960621b6044820152606401610476565b6003546000908152600a60205260408120805484908110610c7b57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160020181905550610c9a81836117cc565b5050565b60025460ff1615610cc15760405162461bcd60e51b815260040161047690612283565b600354600090815260086020526040902060010154421015610d255760405162461bcd60e51b815260206004820152601760248201527f526f756e642063616e206e6f7420626520636c6f7365640000000000000000006044820152606401610476565b60038054906000610d358361237c565b9190505550610d4261193f565b50565b610d4d612128565b6000838152600a60205260409020805483908110610d7b57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160c081018252600690930290910180546001600160a01b03168352600181015493830193909352600283015490820152600382015460608201526004820154608082015260059091015460ff16151560a0820152905092915050565b6000546001600160a01b03163314610e105760405162461bcd60e51b8152600401610476906122ad565b610b236000611cae565b6000546001600160a01b03163314610e445760405162461bcd60e51b8152600401610476906122ad565b6002546040516340c10f1960e01b8152306004820152620186a060248201526101009091046001600160a01b0316906340c10f1990604401600060405180830381600087803b158015610e9657600080fd5b505af1158015610eaa573d6000803e3d6000fd5b505060025460405163095ea7b360e01b8152306004820152620186a060248201526101009091046001600160a01b0316925063095ea7b39150604401602060405180830381600087803b158015610f0057600080fd5b505af1158015610f14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3891906121c3565b50610f466203f480426122e2565b600380546000908152600860205260408082206001019390935581548152828120620186a09055815481528281206002018190558154815291822001805460ff191690556006819055600755565b6000546001600160a01b03163314610fbe5760405162461bcd60e51b8152600401610476906122ad565b610b23611cfe565b610ff360405180608001604052806000815260200160008152602001600081526020016000151581525090565b5060009081526008602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff161515606082015290565b600260015414156110905760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610476565b60026001556110a160025460ff1690565b156110be5760405162461bcd60e51b815260040161047690612283565b6000620f4240600454836110d2919061231a565b6110df90620f424061231a565b6110e991906122fa565b600380546000908152600860205260409020015490915060ff16156111435760405162461bcd60e51b815260206004820152601060248201526f139bdd0818481cd85b19481c9bdd5b9960821b6044820152606401610476565b803410156111875760405162461bcd60e51b8152602060048201526011602482015270496e737566666963656e742066756e647360781b6044820152606401610476565b600354600090815260086020526040812060020180548392906111ab9084906122e2565b9091555050336000908152600960205260409020546111d69082906001600160a01b03166032611646565b33600090815260096020526040808220546001600160a01b03908116835291205461120591839116601e611646565b611213336108318334612339565b6002546112309061010090046001600160a01b0316303385611d56565b604080518381526020810183905233917f270d61a93f3628a504f8b985e516cc56a9cd541defbdc26196333fda2bacc9c5910160405180910390a2505060018055565b60025460ff16156112965760405162461bcd60e51b815260040161047690612283565b600380546000908152600860205260409020015460ff1615156001146112f25760405162461bcd60e51b8152602060048201526011602482015270139bdd0818481d1c985919481c9bdd5b99607a1b6044820152606401610476565b806112fc33610a62565b101561133f5760405162461bcd60e51b8152602060048201526012602482015271496e737566666963656e7420746f6b656e7360701b6044820152606401610476565b60025461135c9061010090046001600160a01b0316333084611d56565b611364612128565b3381526060810182905260808101839052604081018290526003546020820152600160a08201526006805490600061139b8361237c565b9091555050600380546000908152600a6020908152604080832080546001808201835591855293839020865160069095020180546001600160a01b0319166001600160a01b0390951694909417845585830151908401558481015160028401556060850151938301939093556080840151600483015560a08401516005928301805460ff1916911515919091179055905482518581529182018690529133917fc91f8c0f477cf15f9c2817f9ebd625732b44c4753ed718ae0276a96577a69f72910160405180910390a3600580549060006114758361237c565b9190505550505050565b6000546001600160a01b031633146114a95760405162461bcd60e51b8152600401610476906122ad565b6001600160a01b03811661150e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610476565b610d4281611cae565b6000546001600160a01b031633146115415760405162461bcd60e51b8152600401610476906122ad565b60025460ff16156115645760405162461bcd60e51b815260040161047690612283565b61156e82826115a7565b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146115f4576040519150601f19603f3d011682016040523d82523d6000602084013e6115f9565b606091505b50509050806116415760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610476565b505050565b816001600160a01b038116156116cf576000633b9aca00611667848761231a565b61167490620f424061231a565b61167e91906122fa565b905061168a82826115a7565b836001600160a01b03167f2604fdad714a10fb8b95e0f03397e449f85ee9df88bd145ca531f15b8350fb57826040516116c591815260200190565b60405180910390a2505b50505050565b6040516001600160a01b03831660248201526044810182905261164190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611d8e565b60025460ff166117815760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610476565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b0390911681526020015b60405180910390a1565b600060a08301526040820151156118005781516040830151600254611800926101009091046001600160a01b0316916116d5565b600060408084018290526003548252600a602052902080548391908390811061183957634e487b7160e01b600052603260045260246000fd5b6000918252602080832084516006939093020180546001600160a01b0319166001600160a01b03909316929092178255838101516001830155604080850151600284015560608501516003808501919091556080860151600485015560a0909501516005909301805460ff1916931515939093179092559254808352600a909352902080547ffd26bdfab7051e704daf6de4b923d491d29d356b8d9135f96640adfc1c58cec4929184918290811061190157634e487b7160e01b600052603260045260246000fd5b60009182526020918290206006909102015460408051948552918401929092526001600160a01b039091169082015260600160405180910390a15050565b600061194e6203f480426122e2565b6008600060035481526020019081526020016000206001018190555060086000600160035461197d9190612339565b815260208101919091526040016000206003015460ff16151560011415611bea576119a6611e60565b6119ae611ec4565b60038054600090815260086020526040902001805460ff1916905560025461010090046001600160a01b03166342966c686119e830610a62565b6040518263ffffffff1660e01b8152600401611a0691815260200190565b600060405180830381600087803b158015611a2057600080fd5b505af1158015611a34573d6000803e3d6000fd5b50505050600060045462989680611a4b919061231a565b600860006001600354611a5e9190612339565b81526020019081526020016000206002015462989680611a7e919061231a565b611a8891906122fa565b6002546040516340c10f1960e01b81523060048201526024810183905291925061010090046001600160a01b0316906340c10f1990604401600060405180830381600087803b158015611ada57600080fd5b505af1158015611aee573d6000803e3d6000fd5b505060025460405163095ea7b360e01b8152306004820152602481018590526101009091046001600160a01b0316925063095ea7b39150604401602060405180830381600087803b158015611b4257600080fd5b505af1158015611b56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7a91906121c3565b506003805460009081526008602090815260408083208590558354835291829020928301549254600454835160ff909516151585529184015282820152517f3f1f256d10c452e96cacc3da6ad90cd0b5d4aa08e745cb4ccb46bf38ef4b248d9181900360600190a1600191505090565b600860006001600354611bfd9190612339565b815260208101919091526040016000206003015460ff16611ca857600380546000908152600860209081526040808320839055835483528083208401805460ff19166001179055835483528083206002018390558354835291829020928301549254600454835160ff9095161515855291840152908201527f3f1f256d10c452e96cacc3da6ad90cd0b5d4aa08e745cb4ccb46bf38ef4b248d9060600160405180910390a150600190565b50600090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60025460ff1615611d215760405162461bcd60e51b815260040161047690612283565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117ae3390565b6040516001600160a01b03808516602483015283166044820152606481018290526116cf9085906323b872dd60e01b90608401611701565b6000611de3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611fb09092919063ffffffff16565b8051909150156116415780806020019051810190611e0191906121c3565b6116415760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610476565b620f4240600454620fb770611e75919061231a565b611e7f91906122fa565b611e8f906503a3529440006122e2565b60048190556040519081527fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d622906020016117c2565b600654600754600090611ed8908390612339565b905060005b82811015611fa6576003546000908152600a60205260409020611f9490611f0483856122e2565b81548110611f2257634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160c081018252600690930290910180546001600160a01b03168352600181015493830193909352600283015490820152600382015460608201526004820154608082015260059091015460ff16151560a0820152611f8f83856122e2565b6117cc565b80611f9e8161237c565b915050611edd565b5050600060065550565b6060611fbf8484600085611fc7565b949350505050565b6060824710156120285760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610476565b843b6120765760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610476565b600080866001600160a01b031685876040516120929190612234565b60006040518083038185875af1925050503d80600081146120cf576040519150601f19603f3d011682016040523d82523d6000602084013e6120d4565b606091505b50915091506120e48282866120ef565b979650505050505050565b606083156120fe575081610aea565b82511561210e5782518084602001fd5b8160405162461bcd60e51b81526004016104769190612250565b6040518060c0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b80356001600160a01b038116811461053057600080fd5b600060208284031215612191578081fd5b610aea82612169565b600080604083850312156121ac578081fd5b6121b583612169565b946020939093013593505050565b6000602082840312156121d4578081fd5b81518015158114610aea578182fd5b6000602082840312156121f4578081fd5b5035919050565b60006020828403121561220c578081fd5b5051919050565b60008060408385031215612225578182fd5b50508035926020909101359150565b60008251612246818460208701612350565b9190910192915050565b602081526000825180602084015261226f816040850160208701612350565b601f01601f19169190910160400192915050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156122f5576122f5612397565b500190565b60008261231557634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561233457612334612397565b500290565b60008282101561234b5761234b612397565b500390565b60005b8381101561236b578181015183820152602001612353565b838111156116cf5750506000910152565b600060001982141561239057612390612397565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122042e368bacc521fe98550cf08d0e2d608731697c8a2222203d9fd7a73a78493dd64736f6c63430008040033";

type TradingFloorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TradingFloorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TradingFloor__factory extends ContractFactory {
  constructor(...args: TradingFloorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _voteToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TradingFloor> {
    return super.deploy(_voteToken, overrides || {}) as Promise<TradingFloor>;
  }
  getDeployTransaction(
    _voteToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_voteToken, overrides || {});
  }
  attach(address: string): TradingFloor {
    return super.attach(address) as TradingFloor;
  }
  connect(signer: Signer): TradingFloor__factory {
    return super.connect(signer) as TradingFloor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradingFloorInterface {
    return new utils.Interface(_abi) as TradingFloorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TradingFloor {
    return new Contract(address, _abi, signerOrProvider) as TradingFloor;
  }
}
